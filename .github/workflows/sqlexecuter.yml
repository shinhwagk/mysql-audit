name: sql executer
on: [push]
jobs:
  build-sqlexecuter:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
          architecture: "x64"
      - uses: actions/cache@v1
        name: action cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        working-directory: ./src/sqlexecuter
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Unit Test
        working-directory: ./src/sqlexecuter
        env:
          port: ${{ job.services.mysql.ports['3306'] }}
          host: 127.0.0.1
          password: password
          user: root
        run: |
          python main_test.py
      - name: Running sqlexecuter
        working-directory: ./src/sqlexecuter
        run: python main.py & sleep 5
      - name: Rest Api Test
        run: |
          echo $port
          # rs=$(curl -XGET -s http://127.0.0.1:1111)
          # # [[ "$rs" == "" ]] || exit 1
          # curl -XPOST -s -H 'Content-Type: application/json' http://127.0.0.1:1111 -d '{"host":"$host","port":$port,"user":"$user","pass":"$pass","sqls":["create database test"]}'
          # # echo $rs
          # # [[ "$rs" == '["ok"]' ]] || exit 1
        env:
          port: ${{ job.services.mysql.ports['3306'] }}
          host: 127.0.0.1
          pass: password
          user: root
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@2.9
        with:
          name: shinhwagk/sql_executer:0.0.1
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./src/sqlexecuter
